(deftemplate person (slot name) (slot gender))
(assert (person (name "George") (gender "male"))
(person (name "Mum") (gender "female"))
(person (name "Elizabeth") (gender "female"))
(person (name "Philip") (gender "male"))
(person (name "Marget") (gender "female"))
(person (name "Spencer") (gender "male"))
(person (name "Kydd") (gender "female"))
(person (name "Diana") (gender "female"))
(person (name "Charles") (gender "male"))
(person (name "Anne") (gender "female"))
(person (name "Mark") (gender "male"))
(person (name "Andrew") (gender "male"))
(person (name "Sarah") (gender "female"))
(person (name "Edward") (gender "male"))
(person (name "William") (gender "male"))
(person (name "Harry") (gender "male"))
(person (name "Peter") (gender "male"))
(person (name "Zara") (gender "female"))
(person (name "Beatrice") (gender "female"))
(person (name "Eugenie") (gender "female")))

(deftemplate parents (slot child) (slot father) (slot mother))
(assert (parents (child "Elizabeth") (father "George") (mother "Mum"))
(parents (child "Margaret") (father "George") (mother "Mum"))
(parents (child "Diana") (father "Spencer") (mother "Kydd"))
(parents (child "Charles") (father "Philips") (mother "Elizabth"))
(parents (child "Anne") (father "Philips") (mother "Elizabth"))
(parents (child "Andrew") (father "Philips") (mother "Elizabth"))
(parents (child "Edward") (father "Philips") (mother "Elizabth"))
(parents (child "William") (father "Charles") (mother "Diana"))
(parents (child "Harry") (father "Charles") (mother "Diana"))
(parents (child "Peter") (father "Mark") (mother "Anne"))
(parents (child "Zara") (father "Mark") (mother "Anne"))
(parents (child "Beatrice") (father "Andrew") (mother "Sarah"))
(parents (child "Eugenie") (father "Andrew") (mother "Sarah")))

(deftemplate couple (slot husband) (slot wife))
(assert (couple (husband "George") (wife "Mum"))
(couple (husband "Spencer") (wife "Kydd"))
(couple (husband "Philip") (wife "Elizabeth"))
(couple (husband "Charles") (wife "Diana"))
(couple (husband "Mark") (wife "Anne"))
(couple (husband "Andrew") (wife "Sarah")))

(deftemplate grandChild (slot child) (slot grandfather))
(assert (grandChild (child "Charles") (grandfather "George"))
(grandChild (child "Anne") (grandfather "George"))
(grandChild (child "Andrew") (grandfather "George"))
(grandChild (child "Edward") (grandfather "George"))
(grandChild (child "William") (grandfather "Spencer"))
(grandChild (child "Harry") (grandfather "Spencer"))
(grandChild (child "William") (grandfather "Elizabeth"))
(grandChild (child "William") (grandfather "Philip"))
(grandChild (child "Harry") (grandfather "Philip"))
(grandChild (child "Peter") (grandfather "Philip"))
(grandChild (child "Zara") (grandfather "Philip"))
(grandChild (child "Beautrice") (grandfather "Philip"))
(grandChild (child "Eugine") (grandfather "Philip")))

(deftemplate grandParent (slot child) (slot grandfather))
(assert (grandParent (child "Charles") (grandfather "George"))
(grandParent(child "Anne") (grandfather "George"))
(grandParent (child "Andrew") (grandfather "George"))
(grandParent (child "Edward") (grandfather "George"))
(grandParent (child "William") (grandfather "Spencer"))
(grandParent (child "Harry") (grandfather "Spencer"))
(grandParent (child "William") (grandfather "Philip"))
(grandParent (child "Harry") (grandfather "Philip"))
(grandParent (child "Peter") (grandfather "Philip"))
(grandParent (child "Zara") (grandfather "Philip"))
(grandParent (child "Beautrice") (grandfather "Philip"))
(grandParent (child "Eugine") (grandfather "Philip")) )

(deftemplate daughter (slot child) (slot father) (slot mother))
(assert (daughter (child "Elizabeth") (father "George") (mother "Mum"))
(daughter (child "Margaret") (father "George") (mother "Mum"))
(daughter (child "Diana") (father "Spencer") (mother "Kydd"))
(daughter (child "Anne") (father "Philips") (mother "Elizabth"))
(daughter (child "Zara") (father "Mark") (mother "Anne"))
(daughter (child "Beatrice") (father "Andrew") (mother "Sarah"))
(daughter (child "Eugenie") (father "Andrew") (mother "Sarah"))
)

(deftemplate son (slot child) (slot father) (slot mother))
(assert (son (child "Charles") (father "Philips") (mother "Elizabth"))
(son (child "Andrew") (father "Philips") (mother "Elizabth"))
(son (child "Edward") (father "Philips") (mother "Elizabth"))
(son (child "William") (father "Charles") (mother "Diana"))
(son (child "Harry") (father "Charles") (mother "Diana"))
(son (child "Peter") (father "Mark") (mother "Anne"))
)

(deftemplate brother (slot brother1) (slot brother2))
(assert(brother (brother1 "Charles") (brother2 "Andrew"))
(brother (brother1 "Charles") (brother2 "Edward"))
(brother (brother1 "Andrew") (brother2 "Edward"))
(brother (brother1 "William") (brother2 "Harry")))

(deftemplate sister (slot sister1) (slot sister2))
(assert(sister (sister1 "Elizabeth") (sister2 "Margaret"))
(sister (sister1 "Beatrice") (sister2 "Eugenie")))

(deftemplate uncle (slot name) (slot uncle1))
(assert (uncle (name "William") (uncle1 "Mark"))
(uncle (name "William") (uncle1 "Andrew"))
(uncle (name "William") (uncle1 "Edward"))
(uncle (name "Harry") (uncle1 "Mark"))
(uncle (name "Harry") (uncle1 "Andrew"))
(uncle (name "Harry") (uncle1 "Edward"))
(uncle (name "Peter") (uncle1 "Charles"))
(uncle (name "Peter") (uncle1 "Andrew"))
(uncle (name "Peter") (uncle1 "Edward"))
(uncle (name "Zara") (uncle1 "Charles"))
(uncle (name "Zara") (uncle1 "Andrew"))
(uncle (name "Zara") (uncle1 "Edward"))
(uncle (name "Beatrice") (uncle1 "Charles"))
(uncle (name "Beatrice") (uncle1 "Andrew"))
(uncle (name "Beatrice") (uncle1 "Edward"))
(uncle (name "Eugenie") (uncle1 "Charles"))
(uncle (name "Eugenie") (uncle1 "Andrew"))
(uncle (name "Eugenie") (uncle1 "Edward"))
(uncle (name "Diana") (uncle1 "Philip"))
(uncle (name "Charles") (uncle1 "Philip"))
(uncle (name "Anne") (uncle1 "Spencer"))
(uncle (name "Spencer") (uncle1 "George"))
)

(deftemplate aunt (slot name) (slot aunt1))
(assert(aunt (name "William") (aunt1 "Anne"))
(aunt (name "William") (aunt1 "Sarah"))
(aunt (name "Harry") (aunt1 "Anne"))
(aunt (name "Harry") (aunt1 "Sarah"))
(aunt (name "Peter") (aunt1 "Sarah"))
(aunt (name "Peter") (aunt1 "Diana"))
(aunt (name "Zara") (aunt1 "Sarah"))
(aunt (name "Zara") (aunt1 "Diana"))
(aunt (name "Beatrice") (aunt1 "Anne"))
(aunt (name "Beatrice") (aunt1 "Diana"))
(aunt (name "Eugenie") (aunt1 "Anne"))
(aunt (name "Diana") (aunt1 "Elizabeth"))
(aunt (name "Diana") (aunt1 "Margaret"))
(aunt (name "Charles") (aunt1 "Margaret"))
(aunt (name "Anne") (aunt1 "Kydd"))
(aunt (name "Anne") (aunt1 "Margaret"))
(aunt (name "Mark") (aunt1 "Kydd"))
(aunt (name "Mark") (aunt1 "Margaret"))
(aunt (name "Andrew") (aunt1 "Kydd"))
(aunt (name "Andrew") (aunt1 "Margaret"))
(aunt (name "Sarah") (aunt1 "Kydd"))
(aunt (name "Sarah") (aunt1 "Margaret"))
(aunt (name "Edward") (aunt1 "Kydd"))
(aunt (name "Edward") (aunt1 "Margaret"))
(aunt (name "Spencer") (aunt1 "Mum"))
(aunt (name "Kydd") (aunt1 "Mum")))

(deftemplate brotherinlaw (slot name) (slot brotherinlaw1))
(assert(brotherinlaw (name "Diana") (brotherinlaw1 "Mark"))
(brotherinlaw (name "Diana") (brotherinlaw1 "Andrew"))
(brotherinlaw (name "Diana") (brotherinlaw1 "Edward"))
(brotherinlaw (name "Mark") (brotherinlaw1 "Charles"))
(brotherinlaw (name "Margaret") (brotherinlaw1 "Philip")))

(deftemplate sisterinlaw (slot name) (slot sisterinlaw1))
(assert(sisterinlaw (name "Diana") (sisterinlaw1 "Anne")))

(deftemplate firstCousin (slot name) (slot firstCousin1))
(assert(firstCousin (name "William") (firstCousin1 "Peter"))
(firstCousin (name "Harry") (firstCousin1 "Peter"))
(firstCousin (name "Zara") (firstCousin1 "William"))
(firstCousin (name "Beatrice") (firstCousin1 "William"))
(firstCousin (name "Eugenie") (firstCousin1 "William")))

__________________________________________________

(defrule query1 (firstCousin (name "William"))
=> (printout t " Charles " ))

(defrule query2 (aunt (name "Spencer"))
=> (printout t " Mum " ))

(defrule query3 (aunt (name "Charles"))
=> (printout t " Margaret " ))

(defrule query4 (grandChild (grandfather "Elizabeth"))
=> (printout t " William " ))

(defrule query5 (brotherinlaw (name "Margaret"))
=> (printout t " Philip " ))

(defrule query1 (parents (child "Harry"))
=> (printout t " Charles " ))

___________________

FAHIM

(defrule query1 (firstCousin (name "William"))
=> (printout t " Charles " ))

(defrule query2 (brother (brother1 "Charles"))
=> (printout t " Edward " ))

(defrule query3 (brotherinlaw (name "Mark"))
=> (printout t " Charles "))

(defrule query4 (aunt (name "William"))
=> (printout t " Sarah " ))

(defrule query5 (parents (child "Harry"))
=> (printout t " Charles " ))

___________
(defrule rule1(person (gender "male"))
=> (printout t "asas" clrf))